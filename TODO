// EVERYTHING :D //

Process:

- Read from file descriptor:
	- Check for errors:
		- Is it a valid file (Is the file descritor a positive number)?
		- Is the buffer sent in parameters valid?
	- Using a loop, read characters by characters (since we don't know the actual length of the 'line')
		- We'll use a linked list to stock the characters 
		  (for the same reason as above as we read chars by chars: we can't allocate memory for the full line since we don't know its length.)
		- The loop (reading) stops when there's either a '\n' or if we're at the end of file.
	- Transfer the characters in the list into the buffer sent in parameters.
		- Count the number of nodes in the list to know the size to allocate to the buffer.
		- Allocate the buffer using malloc and don't forget to protect it.
		- Copy the characters in the list into the buffer.
		- Don't forget to free the list after that!

Eventual Problems:
- What happen if the buffer size if modified in defense? (I don't see why it should be modified btw..)
	- Check if the buffer size is not too big?
		- If then, reduced it? (meh.)
		- Or leave the program with an error? (almost as meh.)

yop, ce n'est pas bien compliqué. Tu lis une partie du fichier de la taille du "BUFFER_SIZE" qui est une macro que tu définira dans ton get_next_line.h
Dans ce que tu viens de lire tu recherche un "\n" si tu en trouves un tu copie depuis le debut de la chaine jusqu'au "\n" mais sans le "\n" tu le remplace par "\0", ensuite si il te reste des données après le "\n" (même si d'autres \n si trouvent) tu les stockes dans une variable "static".
Lors de l'appel suivant de get_next_line tu vérifier dans ta variable statique si tu as encore un \n, si oui tu copie depuis le début  de cette variable jusqu'au \n que tu remplace par "\0". etc...
quand tu n'as plus de "\n" dans ta variable statique, tu relis dans le fichier de la taille du BUFFER_SIZE, et tu recherche de nouveau un "\n" dedans, si tu en troues un tu concaténe ta variable statique avec la partie qui précède le "\n" de ton buffer. tu stocke le résultats de la concaténation dans la variable *line qu'on te passe en paramètre et tu stocke le reste du buffer dans ta variable statique.
Une fois atteint la fin du fichier tu dois vérifier si il te reste des données dans ta variable statique tu les copie dans la variable *line et renvois 0, pour signaler que la lecture et terminer et que tu n'as plus de ligne à renvoyer.
